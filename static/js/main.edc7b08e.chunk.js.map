{"version":3,"sources":["store/reducer.js","store/configureStore.js","store/actions.js","Chips/index.jsx","Select/index.jsx","store/selectors.js","Tree.js","App.js","serviceWorker.js","index.js"],"names":["initialState","users","usersDictionary","defaultValues","selected","write","read","items","getNewStateAfterRemoveFromSelection","state","id","Object","entries","reduce","prev","array","_array","slicedToArray","key","value","toString","objectSpread","defineProperty","privilegesReducer","arguments","length","undefined","_ref","type","payload","rootReducer","combineReducers","form","formReducer","privileges","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","require","count","RBAMOUSER\\horodelk","firstName","lastName","RBAMOUSER\\rzezakm","init","values","item","usersByIdWhoHasReadAccess","usersByIdWhoHasWriteAccess","everyUserHasReadAccess","everyUserHasWriteAccess","someUsersHasReadAccess","someUsersHasWriteAccess","partialRead","partialWrite","partial","all","markAsSelected","markAsDeselected","removeFromSelection","handleDelete","withStyles","theme","root","display","justifyContent","flexWrap","chip","margin","spacing","unit","props","classes","react_default","a","createElement","className","Chip_default","avatar","Avatar_default","label","onDelete","NativeSelects","organization","name","handleChange","event","_this","setState","target","_this2","this","TextField_default","style","marginLeft","minWidth","disabled","src_Chips","FormControl_default","variant","formControl","InputLabel_default","ref","labelRef","ReactDOM","findDOMNode","htmlFor","Select_default","native","onChange","input","OutlinedInput_default","labelWidth","offsetWidth","React","Component","marginBottom","selectEmpty","marginTop","selectedSelector","privilegesSelector","createSelector","console","log","getCheckboxState","usersByIdWhoHasAccess","usersDetails","map","allUsersAccess","_ref2","toConsumableArray","concat","selectionValue","isSelected","isDeselected","isPartiallySelectedByDefault","someOfMyPartialParentsAreSelected","path","some","i","someOfMyParentsAreSelected","someOfMyParentsAreDeselected","isChecked","isIndeterminate","indeterminate","getUserDetails","partialId","find","userToDictionary","checked","RenderTree","isCheckedIfParentChecked","amIlastManStanding","isDisabled","onToggle","Tree_TreeNode","CheckboxTooltip","_getCheckboxState","objectWithoutProperties","title","next","user","Tooltip_default","placement","Checkbox_default","disableRipple","e","TreeNode","_ref3","getState","Tree_CheckboxTooltip","PrivilegesForm","handleToggle","hasPartialDefaultValue","hasSelectedByAllDefaultValue","actions","_this$props","padding","src_Select","Tree_RenderTree","filter","index","mapStateToProps","connect","dispatch","bindActionCreators","privilegesActions","App","es","store","height","Tree","Boolean","location","hostname","match","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.edc7b08e.chunk.js","sourcesContent":["const initialState = {\n    users: {},\n    usersDictionary: {},\n    defaultValues: [],\n    selected: { write: [], read: [] },\n    items: [],\n};\n\nconst exampleSelected = {\n    write: {\n        1: true,\n        2: true,\n        3: true,\n    },\n    read: {\n        1: true,\n        2: true,\n        3: false,\n    }\n};\n\nconst privilegesReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case 'INIT_LIST': {\n            return { ...state, ...payload };\n        }\n        case 'MARK_AS_SELECTED': {\n            return {\n                ...state,\n                selected: {\n                    ...state.selected,\n                    [payload.type]: {\n                        ...state.selected[payload.type],\n                        [payload.id]: true\n                    },\n                },\n            };\n        }\n        case 'MARK_AS_DESELECTED': {\n            return {\n                ...state,\n                selected: {\n                    ...state.selected,\n                    [payload.type]: {\n                        ...state.selected[payload.type],\n                        [payload.id]: false\n                    },\n                },\n            };\n        }\n        case 'REMOVE_FROM_SELECTION': {\n            return {\n                ...state,\n                selected: {\n                    ...state.selected,\n                    [payload.type]: getNewStateAfterRemoveFromSelection(state.selected[payload.type], payload.id),\n                },\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nconst getNewStateAfterRemoveFromSelection = (state, id) => {\n    return Object.entries(state).reduce((prev, array) => {\n        const [key, value] = array;\n        if (key === id) return prev;\n        if (key === id.toString()) return prev;\n        return { ...prev, [key]: value };\n    }, {})\n}\n\nexport default privilegesReducer;","import { createStore, combineReducers } from 'redux'\nimport { reducer as formReducer } from 'redux-form';\nimport privilegesReducer from './reducer';\n\nconst rootReducer = combineReducers({\n    // ...your other reducers here\n    // you have to pass formReducer under 'form' key,\n    // for custom keys look up the docs for 'getFormState'\n    form: formReducer,\n    privileges: privilegesReducer,\n});\n\nexport default createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);","const items = require('../asd.json');\nconst users = require('../mocks/users.json');\n\nconst usersDictionary = {\n    count: 2,\n    \"RBAMOUSER\\\\horodelk\": {\n        firstName: 'Karol',\n        lastName: 'Horodelski',\n    },\n    \"RBAMOUSER\\\\rzezakm\": {\n        firstName: 'Michał',\n        lastName: 'Rzezak',\n    },\n};\n\nexport const init = () => {\n\n    const values = items.reduce((prev, item) => {\n        const usersByIdWhoHasReadAccess = (users && users[item.id] && users[item.id]['read']) || [];\n        const usersByIdWhoHasWriteAccess = (users && users[item.id] && users[item.id]['write']) || [];\n\n        const everyUserHasReadAccess = usersDictionary.count === usersByIdWhoHasReadAccess.length;\n        const everyUserHasWriteAccess = usersDictionary.count === usersByIdWhoHasWriteAccess.length;\n\n        const someUsersHasReadAccess = !everyUserHasReadAccess && usersByIdWhoHasReadAccess.length;\n        const someUsersHasWriteAccess = !everyUserHasWriteAccess && usersByIdWhoHasWriteAccess.length;\n\n\n        return {\n            ...prev,\n            partialRead: {...prev.partialRead, ...(someUsersHasReadAccess && { [item.id]: true }) },\n            partialWrite: {...prev.partialWrite, ...(someUsersHasWriteAccess && { [item.id]: true }) },\n            read: {...prev.read, ...(everyUserHasReadAccess && { [item.id]: true }) },\n            write: {...prev.write, ...(everyUserHasWriteAccess && { [item.id]: true }) },\n        };\n    }, { read: {}, write: {}, partialRead: {}, partialWrite: {} });\n\n    const defaultValues = {\n        partial: { read: values.partialRead, write: values.partialWrite },\n        all: { read: values.read, write: values.write },\n    };\n\n    const selected = { read: values.read, write: values.write };\n\n    return {\n        type: 'INIT_LIST',\n        payload: {\n            users,\n            usersDictionary,\n            items,\n            defaultValues,\n            selected,\n        },\n    };\n};\n\nexport const markAsSelected = (type, item) => ({\n    type: 'MARK_AS_SELECTED',\n    payload: { type, id: item.id },\n});\n\nexport const markAsDeselected = (type, item) => {\n    return {\n        type: 'MARK_AS_DESELECTED',\n        payload: { type, id: item.id },\n    }\n};\n\nexport const removeFromSelection = (type, item) => {\n    return {\n        type: 'REMOVE_FROM_SELECTION',\n        payload: { type, id: item.id },\n    }\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'left',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: theme.spacing.unit,\n    },\n});\n\nfunction handleDelete() {}\n\nfunction Chips(props) {\n    const { classes } = props;\n    return (\n        <div className={classes.root}>\n            <Chip\n                avatar={\n                    <Avatar>\n                        MZ\n                    </Avatar>\n                }\n                label=\"Karol Horodelski (horodelk)\"\n                onDelete={handleDelete}\n                className={classes.chip}\n            />\n            <Chip\n                avatar={\n                    <Avatar>\n                        MZ\n                    </Avatar>\n                }\n                label=\"Michał Rzezak (rzezakm)\"\n                onDelete={handleDelete}\n                className={classes.chip}\n            />\n        </div>\n    );\n}\n\nChips.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Chips);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport TextField from \"@material-ui/core/TextField\";\nimport Chips from '../Chips';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        marginBottom: '24px',\n    },\n    formControl: {\n        margin: theme.spacing.unit,\n        minWidth: 320,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing.unit * 2,\n    },\n});\n\nclass NativeSelects extends React.Component {\n    state = {\n        organization: 10,\n        name: 'hai',\n    };\n\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.value });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <div className={classes.root}>\n                    <TextField\n                        style={{ marginLeft: '10px', minWidth: '320px' }}\n                        id=\"standard-name\"\n                        value=\"  \"\n                        disabled\n                        label=\"Search users and groups\"\n                        margin=\"normal\"\n                    />\n\n                </div>\n                <div className={classes.root}>\n                    <Chips />\n                </div>\n                <div className={classes.root}>\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <InputLabel\n                            ref={ref => {\n                                this.labelRef = ReactDOM.findDOMNode(ref);\n                            }}\n                            htmlFor=\"outlined-organization-native-simple\"\n                        >\n                            Organization Tree\n                        </InputLabel>\n                        <Select\n                            native\n                            disabled\n                            value={this.state.organization}\n                            onChange={this.handleChange('organization')}\n                            input={\n                                <OutlinedInput\n                                    name=\"organization\"\n                                    labelWidth={this.labelRef ? this.labelRef.offsetWidth : 0}\n                                    id=\"outlined-organization-native-simple\"\n                                />\n                            }\n                        >\n                            <option value=\"\" />\n                            <option value={10}>CHRIS</option>\n                        </Select>\n                    </FormControl>\n                </div>\n            </div>\n        );\n    }\n}\n\nNativeSelects.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(NativeSelects);\n","import { createSelector } from 'reselect';\nimport { dropRight, get } from 'lodash';\n\nexport const itemsSelector = state => state.privileges.items;\nexport const usersSelector = state => state.privileges.users;\nexport const usersDictionarySelector = state => state.privileges.usersDictionary;\nexport const selectedSelector = state => state.privileges.selected;\nexport const defaultValuesSelector = state => state.privileges.defaultValues;\n\nexport const isCheckedSelector = (id) => createSelector(\n    selectedSelector,\n    items => items.findIndex(i => i === id),\n);\n\nexport const privilegesSelector = createSelector(\n    itemsSelector,\n    selectedSelector,\n    defaultValuesSelector,\n    usersSelector,\n    usersDictionarySelector,\n    (items, selected, defaultValues, users, usersDictionary) => {\n\n        console.log('defaultValues', defaultValues);\n\n        const getCheckboxState = (type, item) => {\n            if (!items.length) {\n                return {}\n            }\n\n            console.log('id', item.id);\n            const usersByIdWhoHasAccess = (users && users[item.id] && users[item.id][type]) || [];\n            const everyUserHasAccess = usersDictionary.count === usersByIdWhoHasAccess.length;\n            const someUsersHasAccess = !everyUserHasAccess && usersByIdWhoHasAccess.length;\n            const usersDetails = usersByIdWhoHasAccess && usersByIdWhoHasAccess.map(id => usersDictionary[id]);\n\n\n\n            const allUsersAccess = Object.entries(usersDictionary).reduce((prev, [key, value]) => {\n                if (key === 'count') return prev;\n\n                return [...prev, value];\n            }, []);\n\n            // console.log('doesSomeUsersHasThisCheckbox', usersDetails)\n            const selectionValue = selected[type][item.id];\n            const isSelected = typeof selectionValue === 'boolean' && selectionValue;\n            const isDeselected = typeof selectionValue === 'boolean' && !selectionValue;\n            const isPartiallySelectedByDefault = defaultValues.partial[type][item.id];\n            const someOfMyPartialParentsAreSelected = item.path.some(i => defaultValues.partial[type][i]);\n            const someOfMyParentsAreSelected = item.path.some(i => selected[type][i]);\n            const someOfMyParentsAreDeselected = item.path.some(i => selected[type][i] === false); // could be undefined as well\n\n\n            // EXPERIMENTAL\n            // WHAT IF ALL MY CHILDREN ARE SELECTED? SHOULD I BE ALSO SELECTED AND DISABLE CHILDREN?\n\n\n            // const hasPartialValue = typeof defaultValues.partial[type].find(i => i === item.id) === 'number';\n            // const iAmRoot = items[0].id === item.id;\n\n            // const pathWithoutMe = dropRight(item.path);\n\n            // const someOfMyParentsAreSelected = pathWithoutMe.some(i => selected[type].includes(i));\n\n            const isCheckboxAvailable = () => {\n                if (someOfMyParentsAreSelected) {\n                    return false;\n                }\n\n                if (isSelected) {\n                    return true;\n                }\n\n                if (isPartiallySelectedByDefault) {\n                    return true;\n                }\n\n                if (someOfMyPartialParentsAreSelected) {\n                    return true;\n                }\n                //\n                // if (!selected[type].length) {\n                //     return false;\n                // }\n                //\n                // if (!isSelected && someOfMyParentsAreSelected) {\n                //     return true;\n                // }\n                //\n                // if (isSelected && someOfMyParentsAreSelected) {\n                //     return true;\n                // }\n                //\n                return true;\n            };\n            //\n            //\n            const isChecked = isSelected || someOfMyParentsAreSelected;\n            const isUnchecked = isDeselected || someOfMyParentsAreDeselected;\n            const isIndeterminate = !isChecked && !isUnchecked && {\n                indeterminate: isPartiallySelectedByDefault || someOfMyPartialParentsAreSelected\n            };\n\n            const getUserDetails = () => {\n                if (isSelected) {\n                    return allUsersAccess;\n                }\n\n                if (isPartiallySelectedByDefault && isIndeterminate) {\n                    return usersDetails;\n                }\n\n                if (isIndeterminate) {\n                    const partialId = item.path.find(i => defaultValues.partial[type][i]);\n                    const userToDictionary = users && users[partialId] && users[partialId][type];\n                    return userToDictionary && userToDictionary.map(id => usersDictionary[id]);\n                }\n\n                return [];\n            };\n\n            console.log('getUserDetails', getUserDetails());\n\n\n            return {\n                disabled: !isCheckboxAvailable(),\n                checked: isChecked,\n                usersDetails: getUserDetails(),\n                ...isIndeterminate,\n            };\n        };\n\n\n        return ({\n            items,\n            selected,\n            defaultValues,\n            getCheckboxState,\n        })\n    }\n);","import React, {Component} from 'react';\nimport classNames from 'classnames';\nimport { bindActionCreators } from 'redux';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Field, reduxForm } from 'redux-form';\nimport * as privilegesActions from './store/actions';\nimport { connect } from 'react-redux';\nimport Chips from './Chips';\nimport Select from './Select';\nimport './styles.scss';\nimport CheckboxField from './CheckboxField';\nimport {\n    privilegesSelector,\n} from './store/selectors';\n\n//\n// list-style: none;\n// padding: 0;\n// margin: 0;\nconst RenderTree = ({ items, getCheckboxState, isCheckedIfParentChecked, amIlastManStanding, isDisabled, isChecked, onToggle }) => {\n    if (!items.length) return null;\n    return items.map(item => (\n        <TreeNode\n            key={item.id}\n            item={item}\n            isChecked={isChecked}\n            isDisabled={isDisabled}\n            getCheckboxState={getCheckboxState}\n            amIlastManStanding={amIlastManStanding}\n            isCheckedIfParentChecked={isCheckedIfParentChecked}\n            onToggle={onToggle} />\n    ))\n};\n\n\n\nconst CheckboxTooltip = ({ item, onToggle, getCheckboxState, type }) => {\n    const { disabled, checked, indeterminate, ...props } = getCheckboxState(type, item);\n\n    console.log('userDetails', props.usersDetails);\n\n    const title = props.usersDetails && props.usersDetails.length ? props.usersDetails.reduce((prev, next) => {\n        const user = `${next.firstName} ${next.lastName}`;\n        return prev + ` ${user}`;\n    }, '') : '';\n\n    console.log(title)\n\n    return (\n        <Tooltip title={title} placement=\"top\">\n            <Checkbox\n                disableRipple\n                disabled={disabled}\n                checked={checked}\n                indeterminate={indeterminate}\n                onChange={e => { console.log('next state is:', e.target.checked); onToggle(type, e.target.checked, item); }}\n                />\n        </Tooltip>\n    )\n}\n\nconst TreeNode = ({ item, getState, onToggle, getCheckboxState, isChecked, isDisabled, isCheckedIfParentChecked, amIlastManStanding }) => {\n    return (\n        <div  className={`level-${item.path.length - 1}`}>\n            <div className=\"grid\">\n                <div className=\"title\">{item.name}</div>\n                <div className=\"checkboxesWrapper\">\n                    <CheckboxTooltip\n                        type=\"read\"\n                        item={item}\n                        onToggle={onToggle}\n                        getCheckboxState={getCheckboxState} />\n                    <CheckboxTooltip\n                        type=\"write\"\n                        item={item}\n                        onToggle={onToggle}\n                        getCheckboxState={getCheckboxState} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n\nclass PrivilegesForm extends Component {\n    componentDidMount() {\n        this.props.actions.init();\n    }\n\n    handleToggle = (type, isSelected, item) => {\n        const hasPartialDefaultValue = this.props.defaultValues.partial[type][item.id];\n        const hasSelectedByAllDefaultValue = this.props.defaultValues.all[type][item.id];\n\n        console.log('isPartial', hasPartialDefaultValue);\n\n        if (hasPartialDefaultValue && !isSelected) {\n            return this.props.actions.markAsDeselected(type, item);\n        }\n\n        // This way we enable triple checkbox\n        // if (hasPartialDefaultValue && isSelected && this.props.selected[type][item.id] === false) {\n        //     return this.props.actions.removeFromSelection(type, item);\n        // }\n\n        if (hasSelectedByAllDefaultValue && !isSelected) {\n            return this.props.actions.markAsDeselected(type, item);\n        }\n\n        if (isSelected) {\n            return this.props.actions.markAsSelected(type, item)\n        }\n\n        return this.props.actions.removeFromSelection(type, item)\n    };\n\n    render() {\n      const { items, actions } = this.props;\n        return (\n            <div style={{ padding: '10px' }}>\n                <div>\n                    <h1>Organization Privilege Manager</h1>\n                </div>\n                <div>\n                    <Select />\n                </div>\n                <div className=\"header\">\n                    <div />\n                    <div className=\"checkboxesWrapper\">\n                        <span>R</span>\n                        <span>W</span>\n                    </div>\n                </div>\n                <RenderTree\n                    onToggle={this.handleToggle}\n                    getCheckboxState={this.props.getCheckboxState}\n                    isChecked={this.props.isChecked}\n                    isDisabled={this.props.isDisabled}\n                    amIlastManStanding={this.props.amIlastManStanding}\n                    isCheckedIfParentChecked={this.props.isCheckedIfParentChecked}\n                    items={items.filter((item, index) => index < 25)} />\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = privilegesSelector;\n\nconst mapDispatchToProps = (dispatch) => ({\n    actions: bindActionCreators(privilegesActions, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivilegesForm);","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store/configureStore';\nimport './App.css';\nimport Tree from './Tree';\n\nclass App extends Component {\n  render() {\n    return (\n        <Provider store={store}>\n            <div>\n                <div style={{ height: '500px' }}>\n                    <Tree />\n                </div>\n            </div>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}